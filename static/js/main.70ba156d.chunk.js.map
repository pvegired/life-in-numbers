{"version":3,"sources":["firebase.js","components/Auth.js","components/Home.js","components/Timer.js","components/Form.js","components/FilterButton.js","components/Todo.js","components/maintenance.js","components/bareminimum.js","components/exceed.js","components/personal.js","components/Dashboard.js","components/LogIn.js","components/SignUp.js","App.js","index.js","images/todoimage.png"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","Home","useContext","Redirect","to","className","src","require","alt","id","class","Link","onClick","signInWithPopup","catch","alert","Timer","state","date","Date","setInterval","setState","this","getHours","toString","getMinutes","getSeconds","callMe","Component","Form","props","name","setName","onSubmit","e","preventDefault","trim","addTask","htmlFor","type","autoComplete","onChange","target","FilterButton","aria-pressed","isPressed","setFilter","element1","icon","faPen","element2","faTrash","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","MAINTENANCE","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","Maintenance","tasks","setTasks","filter","count","setCount","fetchDataFromFirebase","db","getDatabase","d","datestring","getDate","getMonth","getFullYear","reference","uid","todoslist","todomap","onValue","snapshot","forEach","snapshot1","val","todoid","String","includes","push","CalculatePersonalScore","completedTasks","totalTaskCount","per","percentage","Math","floor","reference1","set","map","taskList","key","filterList","tasksNoun","length","listHeadingRef","prevTaskLength","Progress","data-value","style","width","backgroundSize","newTask","nanoid","role","aria-labelledby","BAREMINIMUM","Bareminimum","EXCEED","Exceed","PERSONAL","Personal","updatedTasks","element","faCalendar","Dashboard","setDate","finalScore","setFinalScore","highscore","totalpercentage","snapshot2","console","log","signOut","datepicker","selected","newDate","Datemagic","LogIn","elements","email","password","signInWithEmailAndPassword","error","errorMessage","message","window","for","placeholder","SignUp","createUserWithEmailAndPassword","App","Switch","Route","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70ba156d.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCBZmV5hJZiUdnzqbkYYei35PcAkpIzBZs\",\r\n  authDomain: \"lifeinnumbers-7adc7.firebaseapp.com\",\r\n  projectId: \"lifeinnumbers-7adc7\",\r\n  storageBucket: \"lifeinnumbers-7adc7.appspot.com\",\r\n  messagingSenderId: \"118769306081\",\r\n  appId: \"1:118769306081:web:8a68d8c3fed35952a76aa0\"\r\n});\r\n\r\n/*var database = firebase.database();\r\nvar ref  = database.ref('users');\r\nvar data = {\r\n    name : \"abc\",\r\n    score :23\r\n}\r\n//ref.push(data);*/\r\n\r\nvar auth = firebase.auth();\r\nvar provider = new firebase.auth.GoogleAuthProvider(); \r\nexport {auth , provider};\r\n\r\nexport default firebaseConfig;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebaseConfig from \"../firebase.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    firebaseConfig.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n      if(user)  {\r\n      }\r\n    });\r\n  }, []);\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport {auth , provider}  from '../firebase.js';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst Home = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n    // Sign in with google\r\n    const signin = () => {\r\n      auth.signInWithPopup(provider).catch(alert);\r\n  }\r\n  if (currentUser) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <div className = \"homecontainer\">\r\n      <img src={require(\"../images/todoimage.png\")} alt=\"3d image for quantified todo\" />\r\n      <div id=\"divLogin\" class=\"login_screen\">\r\n      <h3>Experience the Magic of Quantifiying your Day!</h3>\r\n      <br></br>\r\n      <br></br>\r\n      {currentUser ? (\r\n        <p>\r\n          You are logged - <Link to=\"/dashboard\">View Dashboard</Link>\r\n        </p>\r\n      ) : (\r\n        <p>\r\n\r\n\r\n          <div>\r\n          <Link to=\"/login\" className=\"homepagebutton\">Log In</Link> \r\n          <br></br>\r\n          <Link to=\"/signup\" className=\"homepagebutton\">Sign Up</Link> \r\n          </div>\r\n          <br></br>\r\n          <div>\r\n          {<button onClick={signin} className=\"homepagebutton\" id=\"specialbutton\">Sign In with Google</button> }\r\n          </div>\r\n        </p>\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\n\r\n\r\nclass Timer extends Component {\r\n    state = {\r\n        date: new Date()\r\n    };\r\n\r\n    //     let today = new Date();\r\n    // var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n\r\n    callMe(){\r\n    setInterval( () => {\r\n        this.setState({date: new Date()});\r\n    },1000);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"clock\">\r\n                {/* <h3>{this.state.date.toLocaleTimeString()}</h3> */}\r\n                {/* <h3>{this.state.date.getHours() + \":\" + this.state.date.getMinutes() + \":\" + this.state.date.getSeconds()}</h3> */}\r\n                <h3>{\"Time Left for today -\" + (24 - (this.state.date.getHours() + 1)).toString() + \":\" + (60 - (this.state.date.getMinutes() + 1)).toString() + \":\" + (60 - (this.state.date.getSeconds())).toString()}</h3>\r\n                {this.callMe()}\r\n            </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!name.trim()) {\r\n      return;\r\n    }\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useRef, useState, Component } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen} from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst element1 = <FontAwesomeIcon icon={faPen} />\r\nconst element2 = <FontAwesomeIcon icon={faTrash} />\r\n\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newName.trim()) {\r\n      return;\r\n    }\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        {/* <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label> */}\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName || props.name}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" id=\"textleft\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n          >\r\n            {element1} <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            {element2}  <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from 'nanoid';\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\n\r\n\r\n/*const MAINTENANCE = [\r\n  { id: \"todo-0\", name: \"6 hrs of Sleep\", completed: true },\r\n  { id: \"todo-1\", name: \"40 mins of Exercise\", completed: false },\r\n  { id: \"todo-2\", name: \"15 mins of Meditation\", completed: false }\r\n];\r\n*/\r\n\r\nconst MAINTENANCE = [];\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nconst Maintenance = () =>  {\r\n\r\nconst [date, setDate] = useState(new Date());\r\n\r\nconst [tasks, setTasks] = useState(MAINTENANCE);\r\nconst [filter, setFilter] = useState('All');\r\nconst [count, setCount] = useState(0);\r\n\r\nfunction fetchDataFromFirebase() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var i = 0;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      const name = snapshot1.val().name\r\n      const completed = snapshot1.val().completed\r\n      var todoid = String(id)\r\n      if (todoid.includes(\"todo\") === true) {\r\n        todomap = {\r\n          id: id,\r\n          name: name,\r\n          completed: completed\r\n        };\r\n        todoslist.push(todomap)\r\n      }\r\n    });   \r\n    setTasks(todoslist)\r\n  });\r\n}\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var completedTasks = 0;\r\n  var totalTaskCount = 0 ;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      var todoid = String(id)\r\n    const completed = snapshot1.val().completed\r\n    if (todoid.includes(\"todo\") === true) {\r\n      if (completed === true) {\r\n    \r\n        completedTasks++\r\n      }\r\n      totalTaskCount++\r\n    }\r\n    });   \r\n  });\r\n  var per = 0\r\n  var percentage = 0\r\n  if (totalTaskCount > 0) {\r\n    per = (completedTasks/totalTaskCount) * 100\r\n    percentage = Math.floor(per)\r\n  }\r\n  setCount(percentage)\r\n  const reference1 = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/maintenancepercentage/');\r\n  set(reference1, {\r\n    percentage: percentage,\r\n  });\r\n}\r\n\r\nfunction toggleTaskCompleted(id) {\r\n  const updatedTasks = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      // use object spread to make a new obkect\r\n      // whose `completed` prop has been inverted\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/' + id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : task.name,\r\n        completed : !task.completed\r\n      });\r\n      return {...task, completed: !task.completed}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(updatedTasks);\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n}\r\n\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n  //setTasks(remainingTasks);\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/'+ id);\r\n  set(reference, {\r\n    id: null\r\n  });\r\n  fetchDataFromFirebase();\r\n}\r\n\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n  // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      //\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/'+ task.id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : newName,\r\n        completed : task.completed\r\n      });\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(editedTaskList);\r\n  fetchDataFromFirebase();\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTER_MAP[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\n\r\nfunction addTask(name) {\r\n  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n  //setTasks([...tasks, newTask]);\r\n    //Database related\r\n    const db = getDatabase();\r\n    var user = firebaseConfig.auth().currentUser\r\n    var d = new Date();\r\n    var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n    const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/maintenance/'+ newTask.id);\r\n    set(reference, {\r\n      todoid: newTask.id,\r\n      name : newTask.name,\r\n      completed : newTask.completed\r\n    });\r\n    fetchDataFromFirebase();\r\n}\r\n\r\n\r\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\nconst listHeadingRef = useRef(null);\r\nconst prevTaskLength = usePrevious(tasks.length);\r\n\r\nuseEffect(() => {\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n  if (tasks.length - prevTaskLength === -1) {\r\n    listHeadingRef.current.focus();\r\n  }\r\n}, [tasks.length, prevTaskLength]);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n\r\nlet Progress = (props) => {\r\n  return (\r\n    <div className=\"Progress\" data-value={props.value}>\r\n      <div\r\n        className=\"Progress-Bar\"\r\n        style={{\r\n          width: `${props.value}%`,\r\n          backgroundSize: `${100 * 100 / props.value}% 100%`\r\n        }}        \r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>Maintenance</h1>\r\n        <p>Things you do to maintain \r\nyour physical and mental\r\nhealth daily goes here</p>\r\n        <Progress value={count} />\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Maintenance;\r\n\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from 'nanoid';\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\n\r\n\r\n/*const BAREMINIMUM = [\r\n  { id: \"todo-0\", name: \"Attend All Classes\", completed: true },\r\n  { id: \"todo-1\", name: \"3hrs of Assignments\", completed: false },\r\n  { id: \"todo-2\", name: \"1hr of Job Search Efforts\", completed: false }\r\n];*/\r\n\r\nconst BAREMINIMUM = [];\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nconst Bareminimum = () =>  {\r\n\r\nconst [date, setDate] = useState(new Date());\r\n\r\nconst [tasks, setTasks] = useState(BAREMINIMUM);\r\nconst [filter, setFilter] = useState('All');\r\nconst [count, setCount] = useState(0);\r\n\r\nfunction fetchDataFromFirebase() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var i = 0;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      const name = snapshot1.val().name\r\n      const completed = snapshot1.val().completed\r\n      var todoid = String(id)\r\n      if (todoid.includes(\"todo\") === true) {\r\n        todomap = {\r\n          id: id,\r\n          name: name,\r\n          completed: completed\r\n        };\r\n        todoslist.push(todomap)\r\n      }\r\n    });   \r\n    setTasks(todoslist)\r\n  });\r\n}\r\n\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var completedTasks = 0;\r\n  var totalTaskCount = 0 ;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      var todoid = String(id)\r\n    const completed = snapshot1.val().completed\r\n    if (todoid.includes(\"todo\") === true) {\r\n      if (completed === true) {\r\n    \r\n        completedTasks++\r\n      }\r\n      totalTaskCount++\r\n    }\r\n    });   \r\n  });\r\n  var per = 0\r\n  var percentage = 0\r\n  if (totalTaskCount > 0) {\r\n    per = (completedTasks/totalTaskCount) * 100\r\n    percentage = Math.floor(per)\r\n  }\r\n  setCount(percentage)\r\n  const reference1 = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/bareminimumpercentage/');\r\n  set(reference1, {\r\n    percentage: percentage,\r\n  });\r\n}\r\n\r\nfunction toggleTaskCompleted(id) {\r\n  const updatedTasks = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      // use object spread to make a new obkect\r\n      // whose `completed` prop has been inverted\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/' + id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : task.name,\r\n        completed : !task.completed\r\n      });\r\n      return {...task, completed: !task.completed}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(updatedTasks);\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n}\r\n\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n  //setTasks(remainingTasks);\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/'+ id);\r\n  set(reference, {\r\n    id: null\r\n  });\r\n  fetchDataFromFirebase();\r\n}\r\n\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n  // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      //\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/'+ task.id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : newName,\r\n        completed : task.completed\r\n      });\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(editedTaskList);\r\n  fetchDataFromFirebase();\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTER_MAP[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\n\r\nfunction addTask(name) {\r\n  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n  //setTasks([...tasks, newTask]);\r\n    //Database related\r\n    const db = getDatabase();\r\n    var user = firebaseConfig.auth().currentUser\r\n    var d = new Date();\r\n    var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n    const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/bareminimum/'+ newTask.id);\r\n    set(reference, {\r\n      todoid: newTask.id,\r\n      name : newTask.name,\r\n      completed : newTask.completed\r\n    });\r\n    fetchDataFromFirebase();\r\n}\r\n\r\n\r\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\nconst listHeadingRef = useRef(null);\r\nconst prevTaskLength = usePrevious(tasks.length);\r\n\r\nuseEffect(() => {\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n  if (tasks.length - prevTaskLength === -1) {\r\n    listHeadingRef.current.focus();\r\n  }\r\n}, [tasks.length, prevTaskLength]);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n\r\nlet Progress = (props) => {\r\n  return (\r\n    <div className=\"Progress\" data-value={props.value}>\r\n      <div\r\n        className=\"Progress-Bar\"\r\n        style={{\r\n          width: `${props.value}%`,\r\n          backgroundSize: `${100 * 100 / props.value}% 100%`\r\n        }}        \r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nreturn (\r\n    <div>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>Bare Minimum</h1>\r\n        <p>Things that  are expected from\r\nyou by default in your day to\r\nday career goes here</p>\r\n        <Progress value={count} />\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Bareminimum;\r\n\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\n\r\n/*const EXCEED = [\r\n  { id: \"todo-0\", name: \"Publish a Blog\", completed: true },\r\n  { id: \"todo-1\", name: \"1 hr of Coursera\", completed: false },\r\n];*/\r\n\r\nconst EXCEED = [];\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nconst Exceed = () =>  {\r\n\r\nconst [date, setDate] = useState(new Date());\r\n\r\nconst [tasks, setTasks] = useState(EXCEED);\r\nconst [filter, setFilter] = useState('All');\r\nconst [count, setCount] = useState(0);\r\n\r\nfunction fetchDataFromFirebase() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var i = 0;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      const name = snapshot1.val().name\r\n      const completed = snapshot1.val().completed\r\n      var todoid = String(id)\r\n      if (todoid.includes(\"todo\") === true) {\r\n        todomap = {\r\n          id: id,\r\n          name: name,\r\n          completed: completed\r\n        };\r\n        todoslist.push(todomap)\r\n      }\r\n    });   \r\n    setTasks(todoslist)\r\n  });\r\n}\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var completedTasks = 0;\r\n  var totalTaskCount = 0 ;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      var todoid = String(id)\r\n    const completed = snapshot1.val().completed\r\n    if (todoid.includes(\"todo\") === true) {\r\n      if (completed === true) {\r\n    \r\n        completedTasks++\r\n      }\r\n      totalTaskCount++\r\n    }\r\n    });   \r\n  });\r\n  var per = 0\r\n  var percentage = 0\r\n  if (totalTaskCount > 0) {\r\n    per = (completedTasks/totalTaskCount) * 100\r\n    percentage = Math.floor(per)\r\n  }\r\n  setCount(percentage)\r\n  const reference1 = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/exceedpercentage/');\r\n  set(reference1, {\r\n    percentage: percentage,\r\n  });\r\n}\r\n\r\nfunction toggleTaskCompleted(id) {\r\n  const updatedTasks = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      // use object spread to make a new obkect\r\n      // whose `completed` prop has been inverted\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/' + id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : task.name,\r\n        completed : !task.completed\r\n      });\r\n      return {...task, completed: !task.completed}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(updatedTasks);\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n}\r\n\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n  //setTasks(remainingTasks);\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/'+ id);\r\n  set(reference, {\r\n    id: null\r\n  });\r\n  fetchDataFromFirebase();\r\n}\r\n\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n  // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      //\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/'+ task.id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : newName,\r\n        completed : task.completed\r\n      });\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  //setTasks(editedTaskList);\r\n  fetchDataFromFirebase();\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTER_MAP[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\n\r\nfunction addTask(name) {\r\n  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n  //setTasks([...tasks, newTask]);\r\n    //Database related\r\n    const db = getDatabase();\r\n    var user = firebaseConfig.auth().currentUser\r\n    var d = new Date();\r\n    var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n    const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/exceed/'+ newTask.id);\r\n    set(reference, {\r\n      todoid: newTask.id,\r\n      name : newTask.name,\r\n      completed : newTask.completed\r\n    });\r\n    fetchDataFromFirebase();\r\n}\r\n\r\n\r\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\nconst listHeadingRef = useRef(null);\r\nconst prevTaskLength = usePrevious(tasks.length);\r\n\r\nuseEffect(() => {\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n  if (tasks.length - prevTaskLength === -1) {\r\n    listHeadingRef.current.focus();\r\n  }\r\n}, [tasks.length, prevTaskLength]);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n\r\nlet Progress = (props) => {\r\n  return (\r\n    <div className=\"Progress\" data-value={props.value}>\r\n      <div\r\n        className=\"Progress-Bar\"\r\n        style={{\r\n          width: `${props.value}%`,\r\n          backgroundSize: `${100 * 100 / props.value}% 100%`\r\n        }}        \r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nreturn (\r\n    <div>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>Exceed</h1>\r\n        <p>Extra things that you believe\r\nare productive and will help\r\nyou in longterm goes here</p>\r\n        <Progress value={count} />\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Exceed;\r\n\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from 'nanoid';\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\n\r\n/*const PERSONAL = [\r\n  { id: \"todo-0\", name: \"Call David\", completed: true },\r\n  { id: \"todo-1\", name: \"Submit Registration Form\", completed: false },\r\n  { id: \"todo-2\", name: \"Meet Linda\", completed: false }\r\n];\r\n*/\r\nconst PERSONAL = [];\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nconst Personal = () =>  {\r\nconst [date, setDate] = useState(new Date());\r\n\r\nconst [tasks, setTasks] = useState(PERSONAL);\r\nconst [filter, setFilter] = useState('All');\r\nconst [count, setCount] = useState(0);\r\n\r\nfunction fetchDataFromFirebase() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var i = 0;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      const name = snapshot1.val().name\r\n      const completed = snapshot1.val().completed\r\n      var todoid = String(id)\r\n      if (todoid.includes(\"todo\") === true) {\r\n        todomap = {\r\n          id: id,\r\n          name: name,\r\n          completed: completed\r\n        };\r\n        todoslist.push(todomap)\r\n      }\r\n    });   \r\n    setTasks(todoslist)\r\n  });\r\n  \r\n}\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/');\r\n  var completedTasks = 0;\r\n  var totalTaskCount = 0 ;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      var todoid = String(id)\r\n    const completed = snapshot1.val().completed\r\n    if (todoid.includes(\"todo\") === true) {\r\n      if (completed === true) {\r\n    \r\n        completedTasks++\r\n      }\r\n      totalTaskCount++\r\n    }\r\n    });   \r\n  });\r\n  var per = 0\r\n  var percentage = 0\r\n  if (totalTaskCount > 0) {\r\n    per = (completedTasks/totalTaskCount) * 100\r\n    percentage = Math.floor(per)\r\n  }\r\n  setCount(percentage)\r\n  const reference1 = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/personalpercentage/');\r\n  set(reference1, {\r\n    percentage: percentage,\r\n  });\r\n}\r\n\r\nfunction toggleTaskCompleted(id) {\r\n  const updatedTasks = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      // use object spread to make a new obkect\r\n      // whose `completed` prop has been inverted\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/' + id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : task.name,\r\n        completed : !task.completed\r\n      });\r\n      return {...task, completed: !task.completed}\r\n    }\r\n    return task;\r\n  });\r\n  setTasks(updatedTasks);\r\n  //fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n}\r\n\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n // setTasks(remainingTasks);\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ id);\r\n  set(reference, {\r\n    id: null\r\n  });\r\n  fetchDataFromFirebase();\r\n}\r\n\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n  // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      //\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      var d = new Date();\r\n      var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ task.id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : newName,\r\n        completed : task.completed\r\n      });\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  fetchDataFromFirebase();\r\n  //setTasks(editedTaskList);\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTER_MAP[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\n\r\nfunction addTask(name) {\r\n  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n \r\n  //Database related\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ newTask.id);\r\n  set(reference, {\r\n    todoid: newTask.id,\r\n    name : newTask.name,\r\n    completed : newTask.completed\r\n  });\r\n  fetchDataFromFirebase();\r\n  //setTasks([...tasks, newTask]);\r\n}\r\n\r\n\r\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\nconst listHeadingRef = useRef(null);\r\nconst prevTaskLength = usePrevious(tasks.length);\r\n\r\nuseEffect(() => {\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n  if (tasks.length - prevTaskLength === -1) {\r\n    listHeadingRef.current.focus();\r\n  }\r\n}, [tasks.length, prevTaskLength]);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n\r\nlet Progress = (props) => {\r\n  return (\r\n    <div className=\"Progress\" data-value={props.value}>\r\n      <div\r\n        className=\"Progress-Bar\"\r\n        style={{\r\n          width: `${props.value}%`,\r\n          backgroundSize: `${100 * 100 / props.value}% 100%`\r\n        }}        \r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>Personal</h1>\r\n        <p>Filler tasks that you will\r\ndo only for today and may \r\nnot be repeated over goes here</p>\r\n        <Progress value={count} />\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\nexport default Personal;\r\n\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext, Component } from \"react\";\r\n// import Form from \"./Form\";\r\n// import FilterButton from \"./FilterButton\";\r\n// import Todo from \"./Todo\";\r\n// import { nanoid } from 'nanoid';\r\nimport Timer from \"./Timer.js\";\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Maintenance from \"./maintenance.js\";\r\nimport Bareminimum from \"./bareminimum.js\";\r\nimport Exceed from \"./exceed\";\r\nimport Personal from \"./personal\";\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCalendar} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst element = <FontAwesomeIcon icon={faCalendar} />\r\n\r\n\r\n\r\nconst Dashboard = () =>  {\r\n\r\nconst [date, setDate] = useState(new Date());\r\nconst [scoreP, setScoreP] = useState(0);\r\nconst [scoreM, setScoreM] = useState(0);\r\nconst [scoreB, setScoreB] = useState(0);\r\nconst [scoreE, setScoreE] = useState(0);\r\nconst [finalScore, setFinalScore] = useState(0);\r\n\r\n\r\nlet personal = 0;\r\nconst handlescore = (score) => {\r\n  let a = (score/100)\r\n  setFinalScore(Math.floor(a))\r\n} \r\n\r\nconst BasicEffect = () => {\r\n\r\n\r\n  return <div>\r\n    <p> Look at the title of the current tab in your browser </p>\r\n  </div>\r\n}\r\n\r\nfunction Datemagic() {\r\n  const datepicker = <DatePicker\r\n  selected={date} \r\n  onChange={date => {\r\n    setDate(date)\r\n  }} />;\r\n\r\n  let newDate = date;\r\n  console.log(newDate)\r\n  var datestring = newDate.getDate() + \"-\" + (newDate.getMonth()+1) + \"-\" + newDate.getFullYear();\r\n  return datepicker;\r\n}\r\n\r\nfunction GetAverageScoreForDay() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  var i = 0;\r\n  var totalScore = 0;\r\n  var reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/');\r\n  console.log(\"hiii\")\r\n  CalculatePersonalScore();\r\n}\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/');\r\n\r\n  onValue(reference, (snapshot) => {\r\n    var highscore = 0;\r\n    var totalpercentage = 0;\r\n    snapshot.forEach(snapshot1 => {\r\n      var completedTasks = 0;\r\n      var totalTaskCount = 0 ;\r\n      var percentage = 0;\r\n      snapshot1.forEach(snapshot2 => {\r\n      var id = snapshot2.val().todoid\r\n      var todoid = String(id)\r\n      const completed = snapshot2.val().completed\r\n     \r\n      if (todoid.includes(\"todo\") === true) {\r\n        if (completed === true) {\r\n          completedTasks++\r\n        }\r\n        totalTaskCount++\r\n      }\r\n    });\r\n    var per = 0\r\n   \r\n    if (totalTaskCount > 0) {\r\n      per = (completedTasks/totalTaskCount) * 100\r\n      percentage = Math.floor(per)\r\n    }\r\n    \r\n    totalpercentage = totalpercentage + percentage;\r\n\r\n  });   \r\n highscore = Math.floor(totalpercentage/4);\r\n console.log(\"score \" + highscore)\r\n setFinalScore(highscore)\r\n  });\r\n \r\n}\r\n\r\n useEffect(() => {\r\n CalculatePersonalScore()\r\n; }, []);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\nconsole.log(date)\r\nreturn (\r\n    <div className=\"container\">\r\n\r\n      {/* html for logo and navigation options */}\r\n      <div className = \"navigation\">\r\n          <div>\r\n              <a id=\"logo\">Day Quantifier</a>\r\n          </div>\r\n          <nav>\r\n          <ul className = \"navlist\">\r\n              <li><a>To do</a></li>\r\n              <li><a>Insights</a></li>\r\n              <li><a onClick={() => firebaseConfig.auth().signOut()}>Sign Out</a></li>\r\n          </ul>\r\n          </nav>\r\n      </div>\r\n      {/* html for body text */}\r\n      <div className=\"text\">\r\n        {element}\r\n        \r\n        <p><strong>Date:</strong></p>\r\n         {Datemagic()}\r\n       \r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>Your Current score for the day is {finalScore}/100</h1>\r\n        <br></br>\r\n        <h3>Est. time to finish remaining tasks - 00:00:00</h3>\r\n        <Timer />\r\n      </div>\r\n\r\n      {/* html for Task or todo containers */}\r\n      <div className=\"taskcontainer\">\r\n      <Personal />\r\n      <Maintenance />\r\n      <Bareminimum />\r\n      <Exceed />\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <p>Developed With Music and Love by Pradeep</p>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase.js\";\r\nimport './LogIn.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LogIn = () => {\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n    const { email, password } = e.target.elements;\r\n    try {\r\n      firebaseConfig.auth().signInWithEmailAndPassword(email.value, password.value).catch(function(error) {\r\n        var errorMessage = error.message;\r\n        window.alert(errorMessage);\r\n      });\r\n    } catch (error) {\r\n    }\r\n  };\r\n  const { currentUser } = useContext(AuthContext);\r\n  if (currentUser) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <div className = \"homecontainer\">\r\n          <img src={require(\"../images/todoimage.png\")} alt=\"3d image for quantified todo\" />\r\n          <div id=\"divLogin\" className=\"login_screen\">\r\n            <h3>Experience the Magic of Quantifiying your Day!</h3>\r\n              <div className=\"login-page\">\r\n            <div className=\"form\">\r\n              <h3>Log In</h3>\r\n              {/* <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"username\"/>\r\n                <input type=\"password\" placeholder=\"password\"/>\r\n                <button className = \"homepagebutton\" type=\"submit\">login</button>\r\n                <p class=\"message\">Not registered? <Link to=\"/signup\">Create an account</Link></p>\r\n              </form> */}\r\n              <form onSubmit={handleSubmit}>\r\n            <label for=\"email\"></label>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n            <label for=\"password\"></label>\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n            <button type=\"submit\">Log In</button>\r\n            <p class=\"message\">Not registered? <Link to=\"/signup\">Create an account</Link></p>\r\n      </form>\r\n\r\n            </div>\r\n          </div>\r\n          </div>\r\n          \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","import React, {useState} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebaseConfig from \"../firebase.js\";\r\n\r\nconst SignUp = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);    \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();    \r\n    const { email, password } = e.target.elements;\r\n    try {\r\n      firebaseConfig.auth().createUserWithEmailAndPassword(email.value, password.value).catch(function(error){\r\n        var errorMessage = error.message;\r\n        window.alert(errorMessage);\r\n      });      \r\n      setCurrentUser(true);\r\n      /*firebaseConfig.database().ref('users/'+email).set({\r\n          email : email\r\n      })*/\r\n\r\n      if (currentUser) {\r\n\r\n        return <Redirect to=\"/dashboard\" />;\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  if (currentUser) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n  }\r\n \r\n  return (\r\n    <div className = \"homecontainer\">\r\n      <img src={require(\"../images/todoimage.png\")} alt=\"3d image for quantified todo\" />\r\n          <div id=\"divLogin\" className=\"login_screen\">\r\n            <h3>Signup for ultimate Todo Experience!</h3>\r\n            <div className=\"login-page\">\r\n              <div className=\"form\">\r\n                  <h3>Create A New Account</h3>\r\n                  \r\n                  <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <label for=\"email\"></label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                    <label for=\"password\"></label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    <button className = \"homepagebutton\" type=\"submit\">Register</button>\r\n                  </form>\r\n\r\n\r\n              </div> \r\n            </div>\r\n          </div>\r\n    </div>  \r\n    \r\n  );\r\n};\r\n\r\nexport default SignUp","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport { AuthProvider } from \"./components/Auth\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n          <Route exact path=\"/login\" component={LogIn} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// import React, { useState, useRef, useEffect } from \"react\";\r\n// import Form from \"./components/Form\";\r\n// import FilterButton from \"./components/FilterButton\";\r\n// import Todo from \"./components/Todo\";\r\n// import { nanoid } from \"nanoid\";\r\n// import firebaseConfig from \"./firebase\";\r\n\r\n\r\n// function usePrevious(value) {\r\n//   const ref = useRef();\r\n//   useEffect(() => {\r\n//     ref.current = value;\r\n//   });\r\n//   return ref.current;\r\n// }\r\n\r\n// const FILTER_MAP = {\r\n//   All: () => true,\r\n//   Active: task => !task.completed,\r\n//   Completed: task => task.completed\r\n// };\r\n\r\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n// function App(props) {\r\n//   const [tasks, setTasks] = useState(props.tasks);\r\n//   const [filter, setFilter] = useState('All');\r\n\r\n//   function toggleTaskCompleted(id) {\r\n//     const updatedTasks = tasks.map(task => {\r\n//       // if this task has the same ID as the edited task\r\n//       if (id === task.id) {\r\n//         // use object spread to make a new obkect\r\n//         // whose `completed` prop has been inverted\r\n//         return {...task, completed: !task.completed}\r\n//       }\r\n//       return task;\r\n//     });\r\n//     setTasks(updatedTasks);\r\n//   }\r\n\r\n\r\n//   function deleteTask(id) {\r\n//     const remainingTasks = tasks.filter(task => id !== task.id);\r\n//     setTasks(remainingTasks);\r\n//   }\r\n\r\n\r\n//   function editTask(id, newName) {\r\n//     const editedTaskList = tasks.map(task => {\r\n//     // if this task has the same ID as the edited task\r\n//       if (id === task.id) {\r\n//         //\r\n//         return {...task, name: newName}\r\n//       }\r\n//       return task;\r\n//     });\r\n//     setTasks(editedTaskList);\r\n//   }\r\n\r\n//   const taskList = tasks\r\n//   .filter(FILTER_MAP[filter])\r\n//   .map(task => (\r\n//     <Todo\r\n//       id={task.id}\r\n//       name={task.name}\r\n//       completed={task.completed}\r\n//       key={task.id}\r\n//       toggleTaskCompleted={toggleTaskCompleted}\r\n//       deleteTask={deleteTask}\r\n//       editTask={editTask}\r\n//     />\r\n//   ));\r\n\r\n//   const filterList = FILTER_NAMES.map(name => (\r\n//     <FilterButton\r\n//       key={name}\r\n//       name={name}\r\n//       isPressed={name === filter}\r\n//       setFilter={setFilter}\r\n//     />\r\n//   ));\r\n\r\n//   function addTask(name) {\r\n//     const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n//     setTasks([...tasks, newTask]);\r\n//   }\r\n\r\n\r\n//   const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n//   const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n//   const listHeadingRef = useRef(null);\r\n//   const prevTaskLength = usePrevious(tasks.length);\r\n\r\n//   useEffect(() => {\r\n//     if (tasks.length - prevTaskLength === -1) {\r\n//       listHeadingRef.current.focus();\r\n//     }\r\n//   }, [tasks.length, prevTaskLength]);\r\n\r\n//   return (\r\n//     <div className=\"todoapp stack-large\">\r\n//       <Form addTask={addTask} />\r\n//       <div className=\"filters btn-group stack-exception\">\r\n//         {filterList}\r\n//       </div>\r\n//       <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n//         {headingText}\r\n//       </h2>\r\n//       <ul\r\n//         role=\"list\"\r\n//         className=\"todo-list stack-large stack-exception\"\r\n//         aria-labelledby=\"list-heading\"\r\n//       >\r\n//         {taskList}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n// const MAINTENANCE = [\r\n//   { id: \"todo-0\", name: \"6 hrs of Sleep\", completed: true },\r\n//   { id: \"todo-1\", name: \"40 mins of Exercise\", completed: false },\r\n//   { id: \"todo-2\", name: \"15 mins of Meditation\", completed: false }\r\n// ];\r\n\r\n// const BAREMINIMUM = [\r\n//   { id: \"todo-0\", name: \"Attend All Classes\", completed: true },\r\n//   { id: \"todo-1\", name: \"3hrs of Assignments\", completed: false },\r\n//   { id: \"todo-2\", name: \"1hr of Job Search Efforts\", completed: false }\r\n// ];\r\n\r\n// const EXCEED = [\r\n//   { id: \"todo-0\", name: \"Publish a Blog\", completed: true },\r\n//   { id: \"todo-1\", name: \"1 hr of Coursera\", completed: false },\r\n// ];\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/todoimage.4a127f5c.png\";"],"sourceRoot":""}